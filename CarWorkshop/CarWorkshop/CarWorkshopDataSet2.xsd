<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="CarWorkshopDataSet2" targetNamespace="http://tempuri.org/CarWorkshopDataSet2.xsd" xmlns:mstns="http://tempuri.org/CarWorkshopDataSet2.xsd" xmlns="http://tempuri.org/CarWorkshopDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CarWorkshopConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CarWorkshopConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.CarWorkshop.Properties.Settings.GlobalReference.Default.CarWorkshopConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PriceTableAdapter" GeneratorDataComponentClassName="PriceTableAdapter" Name="Price" UserDataComponentName="PriceTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CarWorkshopConnectionString (Settings)" DbObjectName="CarWorkshop.dbo.Price" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Price] WHERE (([ID_Price] = @Original_ID_Price) AND ([ServiceWork] = @Original_ServiceWork) AND ([Coast] = @Original_Coast))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ServiceWork" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ServiceWork" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Coast" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Coast" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Price] ([ServiceWork], [Coast]) VALUES (@ServiceWork, @Coast);
SELECT ID_Price, ServiceWork, Coast FROM Price WHERE (ID_Price = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ServiceWork" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ServiceWork" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Coast" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Coast" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Price, ServiceWork, Coast FROM dbo.Price</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Price] SET [ServiceWork] = @ServiceWork, [Coast] = @Coast WHERE (([ID_Price] = @Original_ID_Price) AND ([ServiceWork] = @Original_ServiceWork) AND ([Coast] = @Original_Coast));
SELECT ID_Price, ServiceWork, Coast FROM Price WHERE (ID_Price = @ID_Price)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ServiceWork" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ServiceWork" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Coast" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Coast" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ServiceWork" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ServiceWork" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Coast" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Coast" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Price" ColumnName="ID_Price" DataSourceName="CarWorkshop.dbo.Price" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Price" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Price" DataSetColumn="ID_Price" />
              <Mapping SourceColumn="ServiceWork" DataSetColumn="ServiceWork" />
              <Mapping SourceColumn="Coast" DataSetColumn="Coast" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="CarWorkshopDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="CarWorkshopDataSet2" msprop:Generator_UserDSName="CarWorkshopDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Price" msprop:Generator_TableClassName="PriceDataTable" msprop:Generator_TableVarName="tablePrice" msprop:Generator_TablePropName="Price" msprop:Generator_RowDeletingName="PriceRowDeleting" msprop:Generator_RowChangingName="PriceRowChanging" msprop:Generator_RowEvHandlerName="PriceRowChangeEventHandler" msprop:Generator_RowDeletedName="PriceRowDeleted" msprop:Generator_UserTableName="Price" msprop:Generator_RowChangedName="PriceRowChanged" msprop:Generator_RowEvArgName="PriceRowChangeEvent" msprop:Generator_RowClassName="PriceRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Price" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID_Price" msprop:Generator_ColumnPropNameInRow="ID_Price" msprop:Generator_ColumnPropNameInTable="ID_PriceColumn" msprop:Generator_UserColumnName="ID_Price" type="xs:int" />
              <xs:element name="ServiceWork" msprop:Generator_ColumnVarNameInTable="columnServiceWork" msprop:Generator_ColumnPropNameInRow="ServiceWork" msprop:Generator_ColumnPropNameInTable="ServiceWorkColumn" msprop:Generator_UserColumnName="ServiceWork">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1024" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Coast" msprop:Generator_ColumnVarNameInTable="columnCoast" msprop:Generator_ColumnPropNameInRow="Coast" msprop:Generator_ColumnPropNameInTable="CoastColumn" msprop:Generator_UserColumnName="Coast" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Price" />
      <xs:field xpath="mstns:ID_Price" />
    </xs:unique>
  </xs:element>
</xs:schema>